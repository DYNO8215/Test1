local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local UIS = game:GetService("UserInputService")

-- Function to bring unanchored parts to the selected player
local function bringUnanchoredPartsToPlayer(targetPlayer)
    if targetPlayer and targetPlayer.Character then
        local targetPosition = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        if targetPosition then
            for _, part in ipairs(Workspace:GetDescendants()) do
                if part:IsA("Part") and not part.Anchored then
                    part.Position = targetPosition.Position + Vector3.new(math.random(-5,5), math.random(2,5), math.random(-5,5))
                    part.Velocity = Vector3.new(0, 10, 0) -- Add slight movement
                end
            end
        end
    end
end

-- Create UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 350, 0, 180)
Frame.Position = UDim2.new(0.5, -175, 0.5, -90)
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Frame.BorderSizePixel = 2
Frame.Active = true -- Allow dragging
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Text = "ControlRoom V2 BY: DYNO_LOL"
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Title.TextColor3 = Color3.new(1, 1, 1)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18
Title.Parent = Frame

local TargetDropdown = Instance.new("TextButton")
TargetDropdown.Text = "Select Target"
TargetDropdown.Size = UDim2.new(1, 0, 0, 40)
TargetDropdown.Position = UDim2.new(0, 0, 0, 40)
TargetDropdown.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TargetDropdown.TextColor3 = Color3.new(1, 1, 1)
TargetDropdown.Font = Enum.Font.SourceSansBold
TargetDropdown.TextSize = 16
TargetDropdown.Parent = Frame

local BringPartsButton = Instance.new("TextButton")
BringPartsButton.Text = "Bring Unanchored Parts"
BringPartsButton.Size = UDim2.new(1, 0, 0, 40)
BringPartsButton.Position = UDim2.new(0, 0, 0, 90)
BringPartsButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
BringPartsButton.TextColor3 = Color3.new(1, 1, 1)
BringPartsButton.Font = Enum.Font.SourceSansBold
BringPartsButton.TextSize = 16
BringPartsButton.Parent = Frame

local SelectedTarget = nil

-- Function for selecting a player target
TargetDropdown.MouseButton1Click:Connect(function()
    local playerList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playerList, player.Name)
        end
    end

    if #playerList > 0 then
        local chosenPlayer = playerList[math.random(1, #playerList)]
        TargetDropdown.Text = "Target: " .. chosenPlayer
        SelectedTarget = Players:FindFirstChild(chosenPlayer)
    else
        TargetDropdown.Text = "No Players Available"
    end
end)

-- Button to bring unanchored parts to the selected player
BringPartsButton.MouseButton1Click:Connect(function()
    if SelectedTarget then
        bringUnanchoredPartsToPlayer(SelectedTarget)
    else
        BringPartsButton.Text = "No Target Selected"
        wait(1)
        BringPartsButton.Text = "Bring Unanchored Parts"
    end
end)

-- **Draggable UI System**
local dragging
local dragInput
local dragStart
local startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
